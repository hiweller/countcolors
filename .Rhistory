# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
129/255
# Trying with our original color ranges
norway.rectangular <- countcolors::rectangularRange(norway,
upper = upper.rectangular, lower = lower.rectangular,
target.color = "yellow", main="Definitely too narrow")
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular$img.fraction
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow"); norway.rectangular$img.fraction
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.55, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow"); norway.rectangular$img.fraction
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.55, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow");
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.16,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.155,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.15,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
?countColors
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1)
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1)
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
white.center <- c(1, 1, 1)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors$pixel.fraction
colordistance::extractClusters(kmeans.clusters)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
bg.upper <- c(0.15, 0.12, 0.4)
bg.lower <- c(0.05, 0.04, 0.2)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
two.colors$pixel.fraction
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
bg.ignore$pixel.fraction
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
bg.ignore$pixel.fraction
countcolors::countColors("norway.jpg", color.range="spherical",
lower=bg.lower, upper=bg.upper, plotting = TRUE)
countcolors::countColors("vignettes/norway.jpg", color.range="spherical", lower=bg.lower, upper=bg.upper, plotting = TRUE)
countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=bg.lower, upper=bg.upper, plotting = TRUE)
temp <- countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.4), plotting = TRUE)
106/255
temp <- countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.45), plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
bg.upper <- c(0.2, 0.2, 0.45)
bg.lower <- c(0, 0, 0)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
bg.upper <- c(0.2, 0.2, 0.45)
bg.lower <- c(0, 0, 0)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
bg.ignore$pixel.fraction
?countColorsInDirectory
devtools::use_vignette("bat_WNS")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(imager)
original.img <- system.file("extdata", "bat_wing.png", package ="countcolors")
plot(original.img)
library(imager)
original.img <- load.image(system.file("extdata", "bat_wing.png", package ="countcolors"))
system.file("extdata", "bat_wing.png", package ="countcolors")
library(countcolors)
system.file("extdata", "bat_wing.png", package ="countcolors")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
original.img <- load.image(system.file("extdata", "bat_wing.png", package ="countcolors"))
library(imager)
original.img <- load.image(system.file("extdata", "bat_wing.png", package ="countcolors"))
plot(original.img)
pixel.array <- colordistance::loadImage(original.img)
original.img <- system.file("extdata", "bat_wing.png", package ="countcolors")
pixel.array <- colordistance::loadImage(original.img)
countcolors::plotArrayAsImage(pixel.array$original.rgb)
?plotArrayAsImage
# Read in image
flowers <- jpeg::readJPEG(system.file("extdata", "flowers.jpg", package =
"countcolors"))
# Plot
plotArrayAsImage(flowers, main = "flowers!")
library(countcolors)
original.img <- system.file("extdata", "photoshop.png", package ="countcolors")
pixel.array <- colordistance::loadImage(original.img)
library(countcolors)
original.img <- system.file("extdata", "photoshop.png", package ="countcolors")
pixel.array <- colordistance::loadImage(original.img)
system.file("extdata", "photoshop.png", package ="countcolors")
library(countcolors)
library(countcolors)
original.img <- system.file("extdata", "photoshop.png", package ="countcolors")
pixel.array <- colordistance::loadImage(original.img)
countcolors::plotArrayAsImage(pixel.array$original.rgb)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(countcolors)
original.img <- system.file("extdata", "photoshop.png", package ="countcolors")
pixel.array <- colordistance::loadImage(original.img)
countcolors::plotArrayAsImage(pixel.array$original.rgb)
library(countcolors)
library(imager)
load.image(original.img)
test <- load.image(original.img)
test
typeof(test)
is.array(test)
dim(test)
devtools::check()
version
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::release_checks()
devtools::release_checks()
devtools::release_checks()
devtools::release_checks()
devtools::release_checks()
devtools::release()
devtools::release()
install.packages(c("ape", "callr", "caTools", "cli", "clue", "coda", "commonmark", "data.table", "devtools", "digest", "doParallel", "dplyr", "evaluate", "expm", "foreign", "ggplot2", "git2r", "glue", "htmlwidgets", "httpuv", "igraph", "iterators", "later", "MASS", "mgcv", "mime", "openssl", "ore", "phytools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plotly", "plotrix", "polyclip", "processx", "R6", "raster", "rcmdcheck", "Rcpp", "RcppArmadillo", "rgdal", "rlang", "RNifti", "roxygen2", "rstudioapi", "Rvcg", "scales", "sessioninfo", "spatstat", "spatstat.data", "spatstat.utils", "StereoMorph", "stringi", "survival", "testthat", "tidyselect", "tinytex", "usethis", "vegan", "webshot", "xtable", "yaml"))
devtools::release()
devtools::spell_check()
install.packages("spelling")
devtools::spell_check()
devtools::release()
devtools::check_rhub()
help(scatterplot3d)
devtools::check_rhub()
library(countcolors)
devtools::check()
devtools::check_rhub()
devtools::check_rhub()
devtools::release()
devtools::check_win_devel()
devtools::check_rhub()
devtools::release()
devtools::release()
devtools::release()
11885+560
12585-12445
devtools::check_rhub()
load("brucelindbloom_100Ksample.Rdat")
load("vignettes/brucelindbloom_100Ksample.Rdat")
dim(rgb.pixels)
head(rgb.pixels)
rnorm(10)
runif(10)
?runif
cbind(rep(runif(10), 3))
rbind(rep(runif(10), 3))
rbind(runif(10), runif(10), runif(10))
cbind(runif(10), runif(10), runif(10))
library(countcolors)
devtools::check_rhub()
devtools::check()
devtools::check_win_devel()
devtools::submit_cran()
library(countcolors)
orange <- c(254, 122, 35) / 255
?countColors
countColors(img, color.range = "spherical",
center = orange, radius = 0.1,
bg.lower = NULL,
plotting = T)
img <- "../fish_demos/Large-adult-female-clown-anemonefish-top-male-lower-left-and-juvenile-lower-right-hiding-in-anemone.jpg"
orange <- c(254, 122, 35) / 255
countColors(img, color.range = "spherical",
center = orange, radius = 0.1,
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = orange, radius = 0.15,
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = orange, radius = 0.2,
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = orange, radius = 0.15,
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.2),
bg.lower = NULL,
plotting = T)
white <- c(1, 1, 1)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.2),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.15),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.18),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.19),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.2, 0.15, 0.05),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.2, 0.15, 0.01),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.2, 0.15, 0.1),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.2, 0.1, 0.07),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.18, 0.15, 0.12),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.18, 0.15, 0.1),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = rep(orange, 3), radius = c(0.18, 0.15, 0.08),
bg.lower = NULL,
plotting = T)
countColors(img, color.range = "spherical",
center = c(orange, white), radius = c(0.15, 0.15),
bg.lower = NULL,
plotting = T)
source('~/.active-rstudio-document')
img <- "../Images/Original_batwings/DSC_1690.jpeg"
lower.rectangular <- c(0.223, 0.222, 0.210)
upper.rectangular <- c(0.411, 0.486, 0.501)
bg.upper <- rep(0.2, 3)
bg.lower <- rep(0, 3)
wingfraction <- countColors(img, color.range = "rectangular",
upper = upper.rectangular, lower = lower.rectangular,
bg.upper = bg.upper, bg.lower = bg.lower,
target.color = "magenta",
plot = TRUE)
center <- c(130, 130, 140)/255
img <- "../Images/DSC_1690.jpeg"
center <- c(130, 130, 140)/255
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(160, 160, 150)/255
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(160, 160, 140)/255
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(0.31, 0.35, 0.25)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.05,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.1,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.01,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.01,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.02,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.03,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
img <- "../Images/Original_batwings/DSC_1690.jpeg"
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.1,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
?countcolors
circrange$pixel.fraction
img <- "../Images/DSC_1690.png"
bg.upper <- rep(0.1, 3)
bg.lower <- rep(0, 3)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.1,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.09,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange$pixel.fraction
img <- "../Images/DSC_1690.jpeg"
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.09,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(0.33, 0.37, 0.25)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.09,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.12,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
175/255
150/255
center <- c(0.6, 0.6, 0.5)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.12,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.20,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(0.5, 0.5, 0.4)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.15,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.1,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.12,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.13,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.14,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
center <- c(0.4, 0.41, 0.3)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.1,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.11,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
img <- "../Images/DSC_1690.png"
circrange <- countColors(img, color.range = "spherical",
center = center, radius = 0.11,
bg.upper = bg.upper,
bg.lower = bg.lower,
target.color = "yellow",
plot = T)
circrange$pixel.fraction
pelicans <- "../Images/Fun/pelicans.jpg"
?countColors
center <- rep(1, 3)
countColors(img, color.range = "spherical",
center = rep(center, 3),
radius = c(0.5, 0.3, 0.05),
bg.lower = NULL)
countColors(img, color.range = "spherical",
center = rep(center, 3),
radius = c(0.5, 0.3, 0.05),
bg.lower = NULL,
plotting = TRUE)
countColors(pelicans, color.range = "spherical",
center = rep(center, 3),
radius = c(0.5, 0.3, 0.05),
bg.lower = NULL,
plotting = TRUE)
