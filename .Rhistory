kmeans.clusters <- colordistance::getKMeanColors("norway.jpg", n = 30, plotting = FALSE)
colordistance::plotClusters(colordistance::extractClusters(kmeans.clusters))
kmeans.clusters <- colordistance::getKMeanColors("norway.jpg", n = 30, plotting = FALSE)
colordistance::plotClusters(colordistance::extractClusters(kmeans.clusters))
kmeans.clusters <- colordistance::getKMeanColors("norway.jpg", n = 3, plotting = FALSE)
colordistance::plotClusters(colordistance::extractClusters(kmeans.clusters))
# Find K-means clusters
kmeans.clusters <- colordistance::getKMeanColors("norway.jpg", n = 3, plotting = FALSE); kmeans.clusters
# Find K-means clusters
kmeans.clusters <- colordistance::getKMeanColors("norway.jpg", n = 3, plotting = FALSE); kmeans.clusters$centers
kmeans.clusters$centers; kmeans.clusters$size
kmeans.clusters$centers; kmeans.clusters$cluster
kmeans.clusters$centers; kmeans.clusters$size
colordistance::extractClusters(kmeans.clusters)
```{r, echo=FALSE}
lower <- c(0.6, 0.01, 0.6)
upper <- c(0.99, 0.2, 0.99)
idx <- which( (lower[1] <= rgb.pixels[ , 1] &
rgb.pixels[ , 1] <= upper[1]) &
(lower[2] <= rgb.pixels[ , 2] &
rgb.pixels[ , 2] <= upper[2]) &
(lower[3] <= rgb.pixels[ , 3] &
rgb.pixels[ , 3] <= upper[3]))
load("brucelindbloom_100Ksample.Rdat")
idx <- which( (lower[1] <= rgb.pixels[ , 1] &
rgb.pixels[ , 1] <= upper[1]) &
(lower[2] <= rgb.pixels[ , 2] &
rgb.pixels[ , 2] <= upper[2]) &
(lower[3] <= rgb.pixels[ , 3] &
rgb.pixels[ , 3] <= upper[3]))
rectangle <- rgb.pixels[idx, ]
scatterplot3d::scatterplot3d(rectangle, color=rgb(rectangle),
xlim=c(0, 1), ylim=c(0, 1), zlim=c(0, 1),
xlab="Red", ylab="Green", zlab="Blue", pch=19)
scatterplot3d::scatterplot3d(rectangle, color=rgb(rectangle),
xlim=c(0, 1), ylim=c(0, 1), zlim=c(0, 1),
xlab="Red", ylab="Green", zlab="Blue", pch=20)
center <- c(0.4, 0.7, 0.4)
radius <- 0.05
distances <- vector(length = nrow(rgb.pixels))
for (i in 1:nrow(rgb.pixels)) {
distances[i] <- sqrt(sum((rgb.pixels[i, ] - center)^2))
}
idx <- which(distances <= radius)
scatterplot3d::scatterplot3d(rgb.pixels[idx, ],
color=rgb(rgb.pixels[idx, ]),
xlim=c(0, 1), ylim=c(0, 1), zlim=c(0, 1),
xlab="Red", ylab="Green", zlab="Blue", pch=20)
radius <- 0.25
idx <- which(distances <= radius)
scatterplot3d::scatterplot3d(rgb.pixels[idx, ],
color=rgb(rgb.pixels[idx, ]),
xlim=c(0, 1), ylim=c(0, 1), zlim=c(0, 1),
xlab="Red", ylab="Green", zlab="Blue", pch=20)
?countColors
?sphericalRange
?countColors
# Read the image into the R environment
norway <- jpeg::readJPEG("norway.jpg")
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.1)
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.1, color.pixels = FALSE, plotting = FALSE)
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.1, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.3, color.pixels = FALSE, plotting = TRUE, target.color="magenta"); names(norway.spherical)
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.3, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.1, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
norway.spherical$img.fraction
norway.spherical$img.fraction*100
# Find all the pixels within a 10% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.2, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
norway.spherical$img.fraction
?changePixelColors
?changePixelColor
countcolors::changePixelColor(norway, norway.spherical$pixel.idx, target.color="magenta")
img <- jpeg::readJPEG("norway.jpg")
countcolors::plotArrayAsImage(img)
# Find all the pixels within a 30% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.3, color.pixels = FALSE, plotting = TRUE); norway.spherical$img.fraction
# Find all the pixels within a 30% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.3, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
norway.rectangular <- countcolors::rectangularRange(norway, upper = upper, lower = lower, target.color = "magenta")
upper
lower
norway.rectangular <- countcolors::rectangularRange(norway, upper = upper.rectangular, lower = lower.rectangular, target.color = "magenta")
center.spherical <- c(0.24, 0.45, 0.24) # Center color for spherical range
lower.rectangular <- c(0.2, 0.35, 0.2) # Lower limit for each of the three color channels
upper.rectangular <- c(0.3, 0.55, 0.3) # Upper limit for each of the three color channels
# Find all the pixels within a 30% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.3, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 30% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.1, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 10% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center, radius = 0.1, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
norway.spherical$img.fraction
# Find all the pixels within a 10% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.1, color.pixels = FALSE, plotting = FALSE); names(norway.spherical)
norway.spherical$img.fraction
countcolors::changePixelColor(norway, norway.spherical$pixel.idx, target.color="magenta")
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.2, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.15, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.12, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.14, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.15, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.16, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Find all the pixels within a 20% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.17, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
upper.rectangular
lower.rectangular
dim(norway)
norway.rectangular <- countcolors::rectangularRange(norway, upper = upper.rectangular, lower = lower.rectangular, target.color = "magenta")
norway.spherical$img.fraction
norway.rectnagular$img.fraction
norway.rectangular$img.fraction
upper.rectangular
lower.rectangular
norway.rectangular <- countcolors::rectangularRange(norway, upper = c(0.4, 0.65, 0.4), lower = c(0.1, 0.25, 0.1), target.color = "yellow")
norway.rectangular <- countcolors::rectangularRange(norway, upper = c(0.4, 0.75, 0.4), lower = c(0.1, 0.25, 0.1), target.color = "yellow")
norway.rectangular <- countcolors::rectangularRange(norway, upper = c(0.5, 0.75, 0.5), lower = c(0.1, 0.25, 0.1), target.color = "yellow")
c(82, 129, 29)/255
norway.rectangular <- countcolors::rectangularRange(norway, upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0), target.color = "yellow")
devtools::install_github("hiweller/colordistance")
```{r, echo=FALSE, fig.width=4, fig.height=4}
norway.rectangular$img.fraction
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular$img.fraction
# Find all the pixels within a 17% radius
norway.spherical <- countcolors::sphericalRange(norway, center = center.spherical, radius = 0.17, color.pixels = FALSE, plotting = TRUE, target.color = "magenta"); norway.spherical$img.fraction
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular$img.fraction
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.5, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
129/255
# Trying with our original color ranges
norway.rectangular <- countcolors::rectangularRange(norway,
upper = upper.rectangular, lower = lower.rectangular,
target.color = "yellow", main="Definitely too narrow")
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow")
norway.rectangular$img.fraction
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.51, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow"); norway.rectangular$img.fraction
# Trying with our cooking show values
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.55, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow"); norway.rectangular$img.fraction
norway.rectangular <- countcolors::rectangularRange(norway,
upper = c(0.55, 0.75, 0.4), lower = c(0.1, 0.25, 0),
target.color = "yellow");
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.16,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.155,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
norway.spherical <- countcolors::sphericalRange(norway,
center = center.spherical, radius = 0.15,
color.pixels = FALSE, plotting = TRUE,
target.color = "magenta"); norway.spherical$img.fraction
?countColors
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1)
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1)
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
white.center <- c(1, 1, 1)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = c(green.center, white.center), radius = c(0.15, 0.1),
bg.lower=NULL, bg.upper=NULL, plotting = TRUE)
two.colors$pixel.fraction
colordistance::extractClusters(kmeans.clusters)
two.colors <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
bg.upper <- c(0.15, 0.12, 0.4)
bg.lower <- c(0.05, 0.04, 0.2)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
two.colors$pixel.fraction
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
bg.ignore$pixel.fraction
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
bg.ignore$pixel.fraction
countcolors::countColors("norway.jpg", color.range="spherical",
lower=bg.lower, upper=bg.upper, plotting = TRUE)
countcolors::countColors("vignettes/norway.jpg", color.range="spherical", lower=bg.lower, upper=bg.upper, plotting = TRUE)
countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=bg.lower, upper=bg.upper, plotting = TRUE)
temp <- countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.4), plotting = TRUE)
106/255
temp <- countcolors::countColors("vignettes/norway.jpg", color.range="rectangular", lower=c(0, 0, 0), upper=c(0.2, 0.2, 0.45), plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
bg.upper <- c(0.2, 0.2, 0.45)
bg.lower <- c(0, 0, 0)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
green.center <- c(0.24, 0.45, 0.24)
bg.upper <- c(0.2, 0.2, 0.45)
bg.lower <- c(0, 0, 0)
bg.ignore <- countcolors::countColors("norway.jpg", color.range="spherical",
center = green.center, radius = 0.15,
bg.lower=bg.lower, bg.upper=bg.upper, plotting = TRUE)
# Note that the fraction of all colors COMBINED is provided - to get them
# separately, call the function multiple times
bg.ignore$pixel.fraction
?countColorsInDirectory
