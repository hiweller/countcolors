}
# And make sure everything is in the 0-1 range; if not, assume 0-255 and
# divide by 255
if (range(lower)[2] > 1 | range(upper)[2] > 1) {
lower <- lower / 255
upper <- upper / 255
}
message("Using rectangular bound(s):")
for (i in 1:nrow(lower)) {
message(paste("R: ", paste(lower[i, 1], "-", upper[i, 1], sep = ""),
"; G: ", paste(lower[i, 2], "-", upper[i, 2], sep = ""),
"; B: ", paste(lower[i, 3], "-", upper[i, 3], sep = ""),
sep = ""))
}
# Get range using first color
filtered.img <- rectangularRange(pixel.array = original, lower = lower[1, ],
upper = upper[1, ], plotting = FALSE,
color.pixels = get.indicator,
target.color = target.color[1])
idx <- filtered.img$pixel.idx
if (get.indicator) {
indicator.img <- filtered.img$indicator.img
}
# If more than one lower/upper bound pair were specified, repeat the process
# over increasingly filtered images
if (nrow(lower) > 1) {
for (i in 2:nrow(lower)) {
filtered.img <- rectangularRange(pixel.array = original,
lower = lower[i, ], upper = upper[i, ],
plotting = FALSE, color.pixels = FALSE)
if (get.indicator) {
indicator.img <- changePixelColor(indicator.img,
filtered.img$pixel.idx,
target.color = target.color[i],
return.img = TRUE, plotting = FALSE)
}
idx <- rbind(idx, filtered.img$pixel.idx)
}
}
} else {
stop("color.range must be either 'spherical' or 'rectangular'")
}
for (i in 1:nrow(lower)) {
message(paste("R: ", paste(lower[i, 1], "-", upper[i, 1], sep = ""),
"; G: ", paste(lower[i, 2], "-", upper[i, 2], sep = ""),
"; B: ", paste(lower[i, 3], "-", upper[i, 3], sep = ""),
sep = ""))
}
# Get range using first color
filtered.img <- rectangularRange(pixel.array = original, lower = lower[1, ],
upper = upper[1, ], plotting = FALSE,
color.pixels = get.indicator,
target.color = target.color[1])
# Takes a path to an image and loads it
img <- colordistance::loadImage(path, lower = bg.lower, upper = bg.upper)
original <- img$original.rgb
pixel.array <- original
# Find all pixels within target range + get their locations
idx <- which( (lower[1] <= pixel.array[, , 1] &
pixel.array[, , 1] <= upper[1]) &
(lower[2] <= pixel.array[, , 2] &
pixel.array[, , 2] <= upper[2]) &
(lower[3] <= pixel.array[, , 3] &
pixel.array[, , 3] <= upper[3]),
arr.ind = TRUE)
# Create list to return, including index of pixels within range, number of
# pixels in range, fraction of image in range, and original image
return.list <- list(pixel.idx = idx, pixel.count = nrow(idx),
img.fraction =
nrow(idx) / (nrow(pixel.array) * ncol(pixel.array)),
original.img = pixel.array)
# If color.pixels is TRUE, create a version of the image with the pixels
# changed to a diagnostic color and add indicator image onto returned list
if (color.pixels | plotting) {
indicator.img <-
countcolors::changePixelColor(pixel.array = pixel.array,
pixel.idx = idx,
target.color = target.color,
plotting = FALSE, return.img = TRUE)
return.list$indicator.img <- indicator.img
# If plotting = TRUE, plot indicator.img in the plot window
if (plotting) {
countcolors::plotArrayAsImage(indicator.img, main = main)
}
}
target.color <- "magenta"
# If color.pixels is TRUE, create a version of the image with the pixels
# changed to a diagnostic color and add indicator image onto returned list
if (color.pixels | plotting) {
indicator.img <-
countcolors::changePixelColor(pixel.array = pixel.array,
pixel.idx = idx,
target.color = target.color,
plotting = FALSE, return.img = TRUE)
return.list$indicator.img <- indicator.img
# If plotting = TRUE, plot indicator.img in the plot window
if (plotting) {
countcolors::plotArrayAsImage(indicator.img, main = main)
}
}
indicator.img <-
countcolors::changePixelColor(pixel.array = pixel.array,
pixel.idx = idx,
target.color = target.color,
plotting = FALSE, return.img = TRUE)
# Make sure target color is or can be coerced to an RGB triplet
if (is.character(target.color)) {
target.color <- as.vector(grDevices::col2rgb(target.color) / 255)
}
# Check that vector is of appropriate length and has a 0-1 (not 0-255) range
if (length(target.color) != 3) {
stop("'target.color' must be a numeric vector of length 3 with
values between 0 and 1 or one of the colors listed by colors()")
} else if (range(target.color)[2] > 1) {
target.color <- target.color / 255
}
# Change specified pixels to target color
for (i in 1:nrow(pixel.idx)) {
pixel.array[pixel.idx[i, 1], pixel.idx[i, 2], ] <- target.color
}
idx
# Find all pixels within target range + get their locations
idx <- which( (lower[1] <= pixel.array[, , 1] &
pixel.array[, , 1] <= upper[1]) &
(lower[2] <= pixel.array[, , 2] &
pixel.array[, , 2] <= upper[2]) &
(lower[3] <= pixel.array[, , 3] &
pixel.array[, , 3] <= upper[3]),
arr.ind = TRUE)
idx
return.list$pixel.idx
return.list$pixel.count
devtools::load_all(".")
lower <- c(.9, 0, .9)
upper <- c(1, 0.1, 1)
canola <- countColorsInDirectory(folder, color.range = "rectangular",
lower=lower, upper=upper,
target.color = "yellow", plotting = T,
save.indicator = "../temp/new_directory/", dpi = 72,
return.indicator = F)
lapply(canola, function(i) print(i$pixel.fraction))
center <- c(50, 42, 38)
radius <- 0.12
imgs
folder <- system.file("extdata", package = "countcolors")
imgs <- dir(folder, full.names = T)
imgs[1]
imgs[5]
center <- c(50, 42, 38)
radius <- 0.12
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(50, 42, 38)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 40, 35)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 40, 40)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(50, 45, 45)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 45, 45)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(50, 50, 50)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(52, 50, 45)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- 0.06
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(52, 50, 46)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(52, 50, 47)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(52, 50, 43)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 40, 38)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38)
radius <- 0.05
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38)
radius <- 0.04
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38, 40, 42, 47)
radius <- 0.04
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38, 40, 42, 47)
radius <- c(0.04, 0.04)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
44, 45, 47)
radius <- c(0.04, 0.04)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
44, 45, 49)
radius <- c(0.04, 0.04)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49)
radius <- c(0.04, 0.04)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- c(0.04, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 52)
radius <- c(0.04, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49)
radius <- c(0.04, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- c(0.01, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- c(0.0, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49)
radius <- c(0.05, 0.01)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = c("yellow", "orange"), plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- c(0.05, 0.05)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = c("yellow", "orange"), plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49,
45, 45, 45)
radius <- c(0.05, 0.05, 0.05)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49,
80, 80, 80)
radius <- c(0.05, 0.05, 0.05)
target.color <- c("yellow", "orange", "magenta")
center <- c(45, 42, 38,
45, 46, 46,
0, 0, 0)
radius <- c(0.05, 0.05, 0.05)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 46,
100, 100, 100)
radius <- c(0.05, 0.05, 0.05)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- c(0.05, 0.05, 0.02)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 46,
110, 110, 110)
radius <- c(0.05, 0.05, 0.02)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 49,
110, 110, 110)
radius <- c(0.05, 0.05, 0.02)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 46,
110, 110, 110)
radius <- c(0.05, 0.0, 0.02)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
devtools::load_all(".")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(45, 42, 38,
45, 46, 46,
110, 110, 110)
radius <- c(0.05, 0.01, 0.02)
target.color <- c("yellow", "orange", "magenta")
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radii <- seq(0.01, 0.10, by = 0.01)
radii
center <- c1
radius <- radii[5]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
c1
c1 <- c(45, 42, 38)
c2 <- c(45, 46, 46)
c3 <- c(110, 110, 110)
radii <- seq(0.01, 0.10, by = 0.01)
target.color <- c("yellow", "orange", "magenta")
center <- c1
radius <- radii[5]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- radii[4]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- radii[3]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- radii[4]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
c1 <- c(34, 31, 30)
c2 <- c(45, 46, 46)
c3 <- c(110, 110, 110)
radii <- seq(0.01, 0.10, by = 0.01)
center <- c1
radius <- radii[4]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c3
radius <- radii[4]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
radius <- radii[8]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
center <- c(c2, c3)
radius <- radii[c(5, 8)]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
c2 <- c(55, 46, 46)
c3 <- c(110, 110, 110)
radii <- seq(0.01, 0.10, by = 0.01)
center <- c(c2, c3)
radius <- radii[c(5, 8)]
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = target.color, plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
canola <- countColors(imgs[5], color.range = "spherical",
center = center, radius = radius,
target.color = "yellow", plotting = T,
save.indicator = T, dpi = 72,
return.indicator = F)
